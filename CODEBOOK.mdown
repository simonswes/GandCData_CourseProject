#Code Book

##Variables:
- Subject: Volunteer test subjects represented by the integers 1:30
- Activity: Activity being performed by the Subject at the time the measurement was taken. Possible activities include: WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING
- Measurements: There are two types of measurements for each Activity, ACC and GYRO. In addition, there are columns for both the Mean (mean) and Standard Deviation (std) for each measurement.
  - ACC:This is the body acceleration signal obtained by subtracting the gravity from the total accelleration. 
  - GYRO:This is the angular velocity measured by the gyroscope for each window sample. The units are radians/second. 
  - X, Y, Z: Represent one of three possible directions for the measurement

##Transformation:
1. cbind subject_test, y_test, x_test to create testing1 data.frame
```
testing1<<-cbind(subject_test,y_test,x_test)
```
2. rename columns in testing1 using features2 vector
```
for (i in 3:ncol(testing1)){
    names(testing1)[i]<-features2[i-2]
  }
```
3. cbing subject_train, y_train, x_train to create training1 data.frame
```
training1<<-cbind(subject_train,y_train,x_train)
```
4. rename columns in training1 using features2 vector
```
 for (i in 3:ncol(training1)){
    names(training1)[i]<-features2[i-2]
  }
```
5. rbind training1 and testing1
```
complete<- rbind(training1,testing1)
```
6. Use grep to select only columns with "mean" or "std" in colnames
```
complete2 <- complete[,c(colnames(complete)[grep("mean|std",colnames(complete))])]
```
7. cbind Subject and Activity columns to filtered measurements
```
tidy_data <- cbind(complete[,1:2],complete2) 
```
8. rename Activities from number to friendly name using activities2
```
for (i in 1:nrow(tidy_data)){
    tidy_data$Activity[i] <- activities2[as.numeric(tidy_data$Activity[i])]
  }
```
9. groups the tidy_data by Subject and Activity
```
tidy_data2<- group_by(tidy_data, Subject, Activity)
```
10. summarizes the tidy_data2 data frame using summarize_each. New data frame shows the mean for each subject and activity
```
mean_tidy_data<<- summarize_each(tidy_data2, funs(mean))
```